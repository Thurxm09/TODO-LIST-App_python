<<<<<<< HEAD
name: CI Pipeline (Python)

on:
  push:
    branches: [ 'main', 'principal' ]
  pull_request:
    branches: [ 'main', 'principal' ]
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]
=======
name: CI — Lint & Tests (Python)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.10]
>>>>>>> 6eb8a4e (chore(ci): harmonisation des workflows Python, sécurité et templates)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
<<<<<<< HEAD

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint (optional)
        run: |
          source .venv/bin/activate
          # Run linter if present (ruff/flake8)
          if command -v ruff >/dev/null 2>&1; then ruff check . || true; fi

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -q
=======

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Format check (black)
        run: |
          python -m black --version || true
          python -m black --check .
        continue-on-error: false

      - name: Import sort check (isort)
        run: |
          python -m isort --version || true
          python -m isort --check-only .

      - name: Lint (flake8)
        run: |
          python -m flake8 || true

      - name: Run tests (pytest)
        run: |
          python -m pytest -q
>>>>>>> 6eb8a4e (chore(ci): harmonisation des workflows Python, sécurité et templates)
